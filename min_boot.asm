org	7C00h

use16						

code_start:
	jmp	start
	nop

;========================================
; Начало кода сектора загрузки
;========================================

start:
	push	cs
	pop	ds			

	; Устанавливаем стек
	;----------------
	cli			            	
	mov ax, 0x9000		            	
	mov ss, ax
;	mov sp, 0
	mov sp, 0F800h
	sti

        mov    byte[bootdrv],dl             	

;========================================
; Загружаем 1 сектор
;========================================

.load:
	mov	ax,0x1000
	mov	es,ax			    	
	mov	bx,0			    	

	mov	dl,byte[bootdrv]
	mov	dh,0                        	
	mov	cl,2                     	
	mov	ch,0                        	

	mov	ah,2	;биос int 0x13 функция ah=2, читает
	mov	al,2  	; считать 1 сектор

	int	0x13			   	;вызываем биос
	jnc	ok_load_setup		   	;если ошибок нет продолжаем

	jmp .load 

ok_load_setup:
	;---------------------------
	; Прыгаем в установленный сегмент
	;---------------------------
       mov sp, 0		            	

       mov ax, 0x1000
       mov es, ax
       mov ds, ax
       push word 0x1000
       push word 0
       retf


;==================================================
;Процедура вывода
;==================================================

putstr:
	lodsb
	or al,al
	jz  putstrd
	mov ah,0x0E
	mov bx,0x0007
	int 0x10
	jmp putstr
putstrd:
	retn


;==================================================
;Данные
;==================================================


bootdrv			db 0				; bootdrive number 
loading_msg     	db 'Booting...',13,10,0
ok_msg     		db 'OK!',13,10,0
error_msg     		db 'Error!',13,10,0


;////////////////////////////////////////////////////////////////////
;////////////////////////////////////////////////////////////////////

       rb 7C00h+512-2-$                         	
       db 055h,0AAh                            		




